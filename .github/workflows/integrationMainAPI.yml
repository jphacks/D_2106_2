name: Test of Main API

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

      - name: Build
        run: go build -v ./...
        working-directory: ./main_api

      - name: Test
        run: go test -v ./...
        working-directory: ./main_api

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: Setup test tools
        run: |
          sudo npm install -g newman
          curl -H "X-Api-Key:$POSTMAN_API_KEY" https://api.getpostman.com/collections/$POSTMAN_COLLECTION_ID > collection.json
          curl -H "X-Api-Key:$POSTMAN_API_KEY" https://api.getpostman.com/environments/$POSTMAN_ENVIRONMENT_ID > environment.json
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
          POSTMAN_COLLECTION_ID: ${{ secrets.POSTMAN_COLLECTION_ID }}
          POSTMAN_ENVIRONMENT_ID: ${{ secrets.POSTMAN_ENVIRONMENT_ID }}
        working-directory: ./main_api

      - name: E2E Test
        run: |
          touch .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASS=$DB_PASS" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "DATA_API_HOSTNAME=flask_host" >> .env
          docker-compose up -d --remove-orphans
          sleep 60
          newman run ./collection.json -e ./environment.json
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
        working-directory: ./main_api

      - name: clean up
        run: |
          docker compose down
          rm -f ./collection.json
          rm -f ./main_api/.env
        working-directory: ./main_api

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_USERNAME: shinji
          SLACK_ICON: https://avatars.githubusercontent.com/u/46392441?v=4
          SLACK_COLOR: ${{ job.status }}
